var searchData=
[
  ['deregister_5fthread',['deregister_thread',['../classgrppi_1_1thread__registry.html#a6998752c4b6f918c36e808a8a8d60112',1,'grppi::thread_registry']]],
  ['disable_5fordering',['disable_ordering',['../classgrppi_1_1parallel__execution__native.html#a5d64864ad9a1712b2528c0d424fd7ae4',1,'grppi::parallel_execution_native::disable_ordering()'],['../classgrppi_1_1parallel__execution__omp.html#a162dd5ad2f43ee408c429e0bfd57ba8c',1,'grppi::parallel_execution_omp::disable_ordering()'],['../classgrppi_1_1sequential__execution.html#acbb6656e00d01d4f25c60c15f0332fe0',1,'grppi::sequential_execution::disable_ordering()'],['../classgrppi_1_1parallel__execution__tbb.html#a3b7d56625a7adbcade53a2f4e6052cda',1,'grppi::parallel_execution_tbb::disable_ordering()']]],
  ['discard',['discard',['../group__filter__pattern__native.html#ga718e266f1b54510045e5efc4f1f37588',1,'grppi::discard(parallel_execution_native &amp;ex, Generator generate_op, Predicate predicate_op, Consumer consume_op)'],['../group__filter__pattern__omp.html#ga83c9adc06f9cc03131f679212033118c',1,'grppi::discard(parallel_execution_omp &amp;ex, Generator generate_op, Predicate predicate_op, Consumer consume_op)'],['../group__filter__poly.html#ga35c22b3374221ed2216c408914a5ff26',1,'grppi::discard(polymorphic_execution &amp;ex, Generator &amp;&amp;generate_op, Predicate &amp;&amp;predicate_op, Consumer &amp;&amp;consume_op)'],['../group__filter__pattern__seq.html#ga0ed39c7dfe3044d6186cc89237d7a6a1',1,'grppi::discard(sequential_execution &amp;ex, Generator generate_op, Predicate predicate_op, Consumer consume_op)'],['../group__filter__pattern.html#ga69d1c5d7e7811a6006bede7e485ad381',1,'grppi::discard(Execution &amp;ex, Predicate &amp;&amp;predicate_op)'],['../group__filter__pattern__tbb.html#ga84d14ffc342f83948122d221c26dc3eb',1,'grppi::discard(parallel_execution_tbb &amp;ex, Generator generate_op, Predicate predicate_op, Consumer consume_op)']]],
  ['discard_5fmulti_5fimpl',['discard_multi_impl',['../namespacegrppi.html#a55a12c266e33671c6ce1bff00214ca58',1,'grppi::discard_multi_impl(polymorphic_execution, Generator &amp;&amp;generate_op, Predicate predicate_op, Consumer consume_op)'],['../namespacegrppi.html#a9ca7d94271488c6d3d8d72d29b26137a',1,'grppi::discard_multi_impl(polymorphic_execution &amp;ex, Generator &amp;&amp;generate_op, Predicate &amp;&amp;predicate_op, Consumer &amp;&amp;consume_op)']]],
  ['divide_5fconquer',['divide_conquer',['../group__divide__conquer__pattern__native.html#ga1fb7f707091b7f3a2c7df220f99760d2',1,'grppi::divide_conquer(parallel_execution_native &amp;ex, Input &amp;problem, Divider &amp;&amp;divide_op, Solver &amp;&amp;solve_op, Combiner &amp;&amp;combine_op)'],['../group__divide__conquer__pattern__omp.html#ga9e3a20eb0dccd5aacb71cee102101e16',1,'grppi::divide_conquer(parallel_execution_omp &amp;ex, Input &amp;input, Divider &amp;&amp;divide_op, Solver &amp;&amp;solve_op, Combiner &amp;&amp;combine_op)'],['../group__divide__conquer__pattern__poly.html#gacf84ab83fad5503d9045f35d4b2d94d1',1,'grppi::divide_conquer(polymorphic_execution &amp;ex, Input &amp;input, Divider &amp;&amp;divide_op, Solver &amp;&amp;solve_op, Combiner &amp;&amp;combine_op)'],['../group__divide__conquer__pattern__seq.html#ga0c0daea97b28e0dc95a0347a3ff11426',1,'grppi::divide_conquer(sequential_execution &amp;ex, Input &amp;input, Divider &amp;&amp;divider_op, Solver &amp;&amp;solver_op, Combiner &amp;&amp;combiner_op)'],['../group__divide__conquer__pattern__tbb.html#gaafff85d55bc53fd1b8b6c496d073fe4b',1,'grppi::divide_conquer(parallel_execution_tbb &amp;ex, Input &amp;input, Divider &amp;&amp;divide_op, Solver &amp;&amp;solve_op, Combiner &amp;&amp;combine_op)']]],
  ['divide_5fconquer_5fmulti_5fimpl',['divide_conquer_multi_impl',['../namespacegrppi.html#adf781ed526c8ea5c8f9ee151b3f3c35d',1,'grppi::divide_conquer_multi_impl(polymorphic_execution &amp;ex, Input &amp;input, Divider &amp;&amp;divide_op, Solver &amp;&amp;solve_op, Combiner &amp;&amp;combine_op)'],['../namespacegrppi.html#a9e06b8ee1932788a5bc08deffbf49cad',1,'grppi::divide_conquer_multi_impl(polymorphic_execution &amp;ex, Input &amp;input, Divider &amp;&amp;divide_op, Solver &amp;&amp;solve_op, Combiner &amp;&amp;combine_op)']]]
];
